name: C/C++ CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  actions: write  # Required for uploading artifacts

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          gcc \
          cppcheck \
          valgrind \
          lcov \
          ruby
        
    - name: Generate test runners
      working-directory: Unity/examples/comissions
      run: |
        ruby ../../auto/generate_test_runner.rb test/test_comissao.c test/test_runners/test_comissao_runner.c
        
    - name: Build project
      working-directory: Unity/examples/comissions
      run: |
        make clean
        make
        
    - name: Run static analysis
      working-directory: Unity/examples/comissions
      run: |
        cppcheck \
          --enable=all \
          --suppress=missingIncludeSystem \
          --suppress=constParameterPointer \
          --suppress=unusedFunction \
          --error-exitcode=1 \
          -I src/ \
          -I ../../src/ \
          src/
        
    - name: Run unit tests
      working-directory: Unity/examples/comissions
      run: |
        ./comission_tests
        
    - name: Run memory checks (Valgrind)
      working-directory: Unity/examples/comissions
      run: |
        # Rebuild without ASan for Valgrind
        make clean
        make CC=gcc CFLAGS="-g -Wall -Wextra"  # Remove -fsanitize=address
    
        # Run Valgrind
        valgrind \
          --leak-check=full \
          --show-leak-kinds=all \
          --track-origins=yes \
          --error-exitcode=1 \
          ./comission_tests
        
    - name: Build with coverage
      working-directory: Unity/examples/comissions
      run: |
        make clean
        make CC=gcc CFLAGS="-g -Wall -Wextra -fprofile-arcs -ftest-coverage"

    - name: Run tests for coverage
      working-directory: Unity/examples/comissions
      run: |
        ./comission_tests

    - name: Generate coverage report
      working-directory: Unity/examples/comissions
      run: |
        gcov src/comissao.c
        mkdir -p coverage-report
        lcov --capture --directory . --output-file coverage-report/lcov.info
        genhtml coverage-report/lcov.info --output-directory coverage-report/html

    - name: Upload coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: Unity/examples/comissions/coverage-report
        
    - name: Upload test results
      uses: actions/upload-artifact@v4  # Updated to v4
      with:
        name: test-results
        path: |
          Unity/examples/comissions/test-results/*
          Unity/examples/comissions/*.gcov
        if-no-files-found: warn
        retention-days: 5